// Copyright 2018 Will Johnston
//
// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. This file may not be copied, modified, or distributed
// except according to those terms.

//! Functions and structs for disassembling instructions

use super::types::{Address, Immediate, Immediate16, SignedImmediate};
use super::{Flag, Instruction, Register16, Register8};
use traits::Memory;

/// Decode an instruction
pub fn decode<B: Memory>(address: Address, bus: &B) -> Instruction {
    use self::Flag::*;
    use self::Instruction::*;
    use self::Register16::*;
    use self::Register8::*;

    /// Decode a `0xCB` prefixed instruction
    fn decode_cb<B: Memory>(address: Address, bus: &B) -> Instruction {
        // TODO: (will) implement
        let encoded = bus.read(address);

        match encoded {
            0x00 => RlcR(B),
            0x01 => RlcR(C),
            0x02 => RlcR(D),
            0x03 => RlcR(E),
            0x04 => RlcR(H),
            0x05 => RlcR(L),
            0x06 => RlcHl,
            0x07 => RlcR(A),
            0x08 => RrcR(B),
            0x09 => RrcR(C),
            0x0A => RrcR(D),
            0x0B => RrcR(E),
            0x0C => RrcR(H),
            0x0D => RrcR(L),
            0x0E => RrcHl,
            0x0F => RrcR(A),

            0x10 => RlR(B),
            0x11 => RlR(C),
            0x12 => RlR(D),
            0x13 => RlR(E),
            0x14 => RlR(H),
            0x15 => RlR(L),
            0x16 => RlHl,
            0x17 => RlR(A),
            0x18 => RrcR(B),
            0x19 => RrcR(C),
            0x1A => RrcR(D),
            0x1B => RrcR(H),
            0x1C => RrcR(L),
            0x1D => RrcHl,
            0x1E => unimplemented!(),
            0x1F => RrcR(B),

            0x20 => unimplemented!(),
            0x21 => unimplemented!(),
            0x22 => unimplemented!(),
            0x23 => unimplemented!(),
            0x24 => unimplemented!(),
            0x25 => unimplemented!(),
            0x26 => unimplemented!(),
            0x27 => unimplemented!(),
            0x28 => unimplemented!(),
            0x29 => unimplemented!(),
            0x2A => unimplemented!(),
            0x2B => unimplemented!(),
            0x2C => unimplemented!(),
            0x2D => unimplemented!(),
            0x2E => unimplemented!(),
            0x2F => unimplemented!(),

            0x30 => unimplemented!(),
            0x31 => unimplemented!(),
            0x32 => unimplemented!(),
            0x33 => unimplemented!(),
            0x34 => unimplemented!(),
            0x35 => unimplemented!(),
            0x36 => unimplemented!(),
            0x37 => unimplemented!(),
            0x38 => unimplemented!(),
            0x39 => unimplemented!(),
            0x3A => unimplemented!(),
            0x3B => unimplemented!(),
            0x3C => unimplemented!(),
            0x3D => unimplemented!(),
            0x3E => unimplemented!(),
            0x3F => unimplemented!(),

            0x40 => unimplemented!(),
            0x41 => unimplemented!(),
            0x42 => unimplemented!(),
            0x43 => unimplemented!(),
            0x44 => unimplemented!(),
            0x45 => unimplemented!(),
            0x46 => unimplemented!(),
            0x47 => unimplemented!(),
            0x48 => unimplemented!(),
            0x49 => unimplemented!(),
            0x4A => unimplemented!(),
            0x4B => unimplemented!(),
            0x4C => unimplemented!(),
            0x4D => unimplemented!(),
            0x4E => unimplemented!(),
            0x4F => unimplemented!(),

            0x50 => unimplemented!(),
            0x51 => unimplemented!(),
            0x52 => unimplemented!(),
            0x53 => unimplemented!(),
            0x54 => unimplemented!(),
            0x55 => unimplemented!(),
            0x56 => unimplemented!(),
            0x57 => unimplemented!(),
            0x58 => unimplemented!(),
            0x59 => unimplemented!(),
            0x5A => unimplemented!(),
            0x5B => unimplemented!(),
            0x5C => unimplemented!(),
            0x5D => unimplemented!(),
            0x5E => unimplemented!(),
            0x5F => unimplemented!(),

            0x60 => unimplemented!(),
            0x61 => unimplemented!(),
            0x62 => unimplemented!(),
            0x63 => unimplemented!(),
            0x64 => unimplemented!(),
            0x65 => unimplemented!(),
            0x66 => unimplemented!(),
            0x67 => unimplemented!(),
            0x68 => unimplemented!(),
            0x69 => unimplemented!(),
            0x6A => unimplemented!(),
            0x6B => unimplemented!(),
            0x6C => unimplemented!(),
            0x6D => unimplemented!(),
            0x6E => unimplemented!(),
            0x6F => unimplemented!(),

            0x70 => unimplemented!(),
            0x71 => unimplemented!(),
            0x72 => unimplemented!(),
            0x73 => unimplemented!(),
            0x74 => unimplemented!(),
            0x75 => unimplemented!(),
            0x76 => unimplemented!(),
            0x77 => unimplemented!(),
            0x78 => unimplemented!(),
            0x79 => unimplemented!(),
            0x7A => unimplemented!(),
            0x7B => unimplemented!(),
            0x7C => unimplemented!(),
            0x7D => unimplemented!(),
            0x7E => unimplemented!(),
            0x7F => unimplemented!(),

            0x80 => unimplemented!(),
            0x81 => unimplemented!(),
            0x82 => unimplemented!(),
            0x83 => unimplemented!(),
            0x84 => unimplemented!(),
            0x85 => unimplemented!(),
            0x86 => unimplemented!(),
            0x87 => unimplemented!(),
            0x88 => unimplemented!(),
            0x89 => unimplemented!(),
            0x8A => unimplemented!(),
            0x8B => unimplemented!(),
            0x8C => unimplemented!(),
            0x8D => unimplemented!(),
            0x8E => unimplemented!(),
            0x8F => unimplemented!(),

            0x90 => unimplemented!(),
            0x91 => unimplemented!(),
            0x92 => unimplemented!(),
            0x93 => unimplemented!(),
            0x94 => unimplemented!(),
            0x95 => unimplemented!(),
            0x96 => unimplemented!(),
            0x97 => unimplemented!(),
            0x98 => unimplemented!(),
            0x99 => unimplemented!(),
            0x9A => unimplemented!(),
            0x9B => unimplemented!(),
            0x9C => unimplemented!(),
            0x9D => unimplemented!(),
            0x9E => unimplemented!(),
            0x9F => unimplemented!(),

            0xA0 => unimplemented!(),
            0xA1 => unimplemented!(),
            0xA2 => unimplemented!(),
            0xA3 => unimplemented!(),
            0xA4 => unimplemented!(),
            0xA5 => unimplemented!(),
            0xA6 => unimplemented!(),
            0xA7 => unimplemented!(),
            0xA8 => unimplemented!(),
            0xA9 => unimplemented!(),
            0xAA => unimplemented!(),
            0xAB => unimplemented!(),
            0xAC => unimplemented!(),
            0xAD => unimplemented!(),
            0xAE => unimplemented!(),
            0xAF => unimplemented!(),

            0xB0 => unimplemented!(),
            0xB1 => unimplemented!(),
            0xB2 => unimplemented!(),
            0xB3 => unimplemented!(),
            0xB4 => unimplemented!(),
            0xB5 => unimplemented!(),
            0xB6 => unimplemented!(),
            0xB7 => unimplemented!(),
            0xB8 => unimplemented!(),
            0xB9 => unimplemented!(),
            0xBA => unimplemented!(),
            0xBB => unimplemented!(),
            0xBC => unimplemented!(),
            0xBD => unimplemented!(),
            0xBE => unimplemented!(),
            0xBF => unimplemented!(),

            0xC0 => unimplemented!(),
            0xC1 => unimplemented!(),
            0xC2 => unimplemented!(),
            0xC3 => unimplemented!(),
            0xC4 => unimplemented!(),
            0xC5 => unimplemented!(),
            0xC6 => unimplemented!(),
            0xC7 => unimplemented!(),
            0xC8 => unimplemented!(),
            0xC9 => unimplemented!(),
            0xCA => unimplemented!(),
            0xCB => unimplemented!(),
            0xCC => unimplemented!(),
            0xCD => unimplemented!(),
            0xCE => unimplemented!(),
            0xCF => unimplemented!(),

            0xD0 => unimplemented!(),
            0xD1 => unimplemented!(),
            0xD2 => unimplemented!(),
            0xD3 => unimplemented!(),
            0xD4 => unimplemented!(),
            0xD5 => unimplemented!(),
            0xD6 => unimplemented!(),
            0xD7 => unimplemented!(),
            0xD8 => unimplemented!(),
            0xD9 => unimplemented!(),
            0xDA => unimplemented!(),
            0xDB => unimplemented!(),
            0xDC => unimplemented!(),
            0xDD => unimplemented!(),
            0xDE => unimplemented!(),
            0xDF => unimplemented!(),

            0xE0 => unimplemented!(),
            0xE1 => unimplemented!(),
            0xE2 => unimplemented!(),
            0xE3 => unimplemented!(),
            0xE4 => unimplemented!(),
            0xE5 => unimplemented!(),
            0xE6 => unimplemented!(),
            0xE7 => unimplemented!(),
            0xE8 => unimplemented!(),
            0xE9 => unimplemented!(),
            0xEA => unimplemented!(),
            0xEB => unimplemented!(),
            0xEC => unimplemented!(),
            0xED => unimplemented!(),
            0xEE => unimplemented!(),
            0xEF => unimplemented!(),

            0xF0 => unimplemented!(),
            0xF1 => unimplemented!(),
            0xF2 => unimplemented!(),
            0xF3 => unimplemented!(),
            0xF4 => unimplemented!(),
            0xF5 => unimplemented!(),
            0xF6 => unimplemented!(),
            0xF7 => unimplemented!(),
            0xF8 => unimplemented!(),
            0xF9 => unimplemented!(),
            0xFA => unimplemented!(),
            0xFB => unimplemented!(),
            0xFC => unimplemented!(),
            0xFD => unimplemented!(),
            0xFE => unimplemented!(),
            0xFF => unimplemented!(),
            _ => unimplemented!(),
        }
    }

    let encoded = bus.read(address);
    let next_address = address + 1;
    match encoded {
        0x00 => Nop,
        0x01 => LdRrIi(BC, bus.read_double(next_address) as Immediate16),
        0x02 => LdRrA(BC),
        0x03 => IncRr(BC),
        0x04 => IncR(B),
        0x05 => DecR(B),
        0x06 => LdRI(B, bus.read(next_address) as Immediate),
        0x07 => Rlca,
        0x08 => LdIiSp(bus.read_double(next_address) as Immediate16),
        0x09 => AddHlRr(BC),
        0x0A => LdARr(BC),
        0x0B => DecRr(BC),
        0x0C => IncR(C),
        0x0D => DecR(C),
        0x0E => LdRI(C, bus.read(next_address) as Immediate),
        0x0F => Rrca,

        0x10 => Stop,
        0x11 => LdRrIi(DE, bus.read_double(next_address) as Immediate16),
        0x12 => LdRrA(DE),
        0x13 => IncRr(DE),
        0x14 => IncR(D),
        0x15 => DecR(D),
        0x16 => LdRI(D, bus.read(next_address) as Immediate),
        0x17 => Rla,
        0x18 => JrS(bus.read(next_address) as SignedImmediate),
        0x19 => AddHlRr(DE),
        0x1A => LdARr(BC),
        0x1B => DecRr(DE),
        0x1C => IncR(E),
        0x1D => DecR(E),
        0x1E => LdRI(E, bus.read(next_address) as Immediate),
        0x1F => Rra,

        0x20 => JrCondS(Nf, bus.read(next_address) as SignedImmediate),
        0x21 => LdRrIi(HL, bus.read(next_address) as Immediate16),
        0x22 => unimplemented!(), // TODO: (will) implement
        0x23 => IncHl,
        0x24 => IncR(H),
        0x25 => DecR(H),
        0x26 => LdRI(H, bus.read(next_address) as Immediate),
        0x27 => Daa,
        0x28 => JrCondS(Zf, bus.read(next_address) as SignedImmediate),
        0x29 => AddHlRr(DE),
        0x2A => unimplemented!(), // TODO: (will) implement
        0x2B => DecRr(HL),
        0x2C => IncR(L),
        0x2D => DecR(L),
        0x2E => LdRI(L, bus.read(next_address) as Immediate),
        0x2F => Cpl,

        0x30 => JrCondS(Cf, bus.read(next_address) as SignedImmediate),
        0x31 => LdRrIi(SP, bus.read_double(next_address) as Immediate16),
        0x32 => unimplemented!(), // TODO: (will) implement
        0x33 => IncRr(SP),
        0x34 => IncHl,
        0x35 => DecHl,
        0x36 => LdHlI(bus.read(next_address) as Immediate),
        0x37 => Scf,
        0x38 => JrCondS(Cf, bus.read(next_address) as SignedImmediate),
        0x39 => IncR(A),
        0x3A => unimplemented!(), // TODO: (will) implement
        0x3B => DecRr(SP),
        0x3C => IncR(A),
        0x3D => DecR(A),
        0x3E => LdAI(bus.read(next_address) as Immediate),
        0x3F => Ccf,

        0x40 => LdRR(B, B),
        0x41 => LdRR(B, C),
        0x42 => LdRR(B, D),
        0x43 => LdRR(B, E),
        0x44 => LdRR(B, H),
        0x45 => LdRR(B, L),
        0x46 => LdRHl(B),
        0x47 => LdRR(B, A),
        0x48 => LdRR(C, B),
        0x49 => LdRR(C, C),
        0x4A => LdRR(C, D),
        0x4B => LdRR(C, E),
        0x4C => LdRR(C, H),
        0x4D => LdRR(C, L),
        0x4E => LdRHl(C),
        0x4F => LdRR(C, A),

        0x50 => LdRR(D, B),
        0x51 => LdRR(D, C),
        0x52 => LdRR(D, D),
        0x53 => LdRR(D, E),
        0x54 => LdRR(D, H),
        0x55 => LdRR(D, L),
        0x56 => LdRHl(D),
        0x57 => LdRR(D, A),
        0x58 => LdRR(E, B),
        0x59 => LdRR(E, C),
        0x5A => LdRR(E, D),
        0x5B => LdRR(E, E),
        0x5C => LdRR(E, H),
        0x5D => LdRR(E, L),
        0x5E => LdRHl(E),
        0x5F => LdRR(E, A),

        0x60 => LdRR(H, B),
        0x61 => LdRR(H, C),
        0x62 => LdRR(H, D),
        0x63 => LdRR(H, E),
        0x64 => LdRR(H, H),
        0x65 => LdRR(H, L),
        0x66 => LdRHl(H),
        0x67 => LdRR(H, A),
        0x68 => LdRR(L, B),
        0x69 => LdRR(L, C),
        0x6A => LdRR(L, D),
        0x6B => LdRR(L, E),
        0x6C => LdRR(L, H),
        0x6D => LdRR(L, L),
        0x6E => LdRHl(L),
        0x6F => LdRR(L, A),

        0x70 => LdHlR(B),
        0x71 => LdHlR(C),
        0x72 => LdHlR(D),
        0x73 => LdHlR(E),
        0x74 => LdHlR(H),
        0x75 => LdHlR(L),
        0x76 => Stop,
        0x77 => LdHlR(A),
        0x78 => LdRR(A, B),
        0x79 => LdRR(A, C),
        0x7A => LdRR(A, D),
        0x7B => LdRR(A, E),
        0x7C => LdRR(A, H),
        0x7D => LdRR(A, L),
        0x7E => LdRHl(A),
        0x7F => LdRR(A, A),

        0x80 => AddAR(B),
        0x81 => AddAR(C),
        0x82 => AddAR(D),
        0x83 => AddAR(E),
        0x84 => AddAR(H),
        0x85 => AddAR(L),
        0x86 => AddAHl,
        0x87 => AddAR(A),
        0x88 => AdcAR(B),
        0x89 => AdcAR(C),
        0x8A => AdcAR(D),
        0x8B => AdcAR(E),
        0x8C => AdcAR(H),
        0x8D => AdcAR(L),
        0x8E => AdcAHl,
        0x8F => AdcAR(A),

        0x90 => SubAR(B),
        0x91 => SubAR(C),
        0x92 => SubAR(D),
        0x93 => SubAR(E),
        0x94 => SubAR(H),
        0x95 => SubAR(L),
        0x96 => SubAHl,
        0x97 => SubAR(A),
        0x98 => SbcAR(B),
        0x99 => SbcAR(C),
        0x9A => SbcAR(D),
        0x9B => SbcAR(E),
        0x9C => SbcAR(H),
        0x9D => SbcAR(L),
        0x9E => SbcAHl,
        0x9F => SbcAR(A),

        0xA0 => AndAR(B),
        0xA1 => AndAR(C),
        0xA2 => AndAR(D),
        0xA3 => AndAR(E),
        0xA4 => AndAR(H),
        0xA5 => AndAR(L),
        0xA6 => AndAHl,
        0xA7 => AndAR(A),
        0xA8 => XorAR(B),
        0xA9 => XorAR(C),
        0xAA => XorAR(D),
        0xAB => XorAR(E),
        0xAC => XorAR(H),
        0xAD => XorAR(L),
        0xAE => XorAHl,
        0xAF => XorAR(A),

        0xB0 => OrAR(B),
        0xB1 => OrAR(C),
        0xB2 => OrAR(D),
        0xB3 => OrAR(E),
        0xB4 => OrAR(H),
        0xB5 => OrAR(L),
        0xB6 => OrAHl,
        0xB7 => OrAR(A),
        0xB8 => CpAR(B),
        0xB9 => CpAR(C),
        0xBA => CpAR(D),
        0xBB => CpAR(E),
        0xBC => CpAR(H),
        0xBD => CpAR(L),
        0xBE => CpAHl,
        0xBF => CpAR(A),

        0xC0 => RetCond(Cf),
        0xC1 => Pop(BC),
        0xC2 => JpCondIi(Zf, bus.read_double(next_address) as Address),
        0xC3 => JpIi(bus.read_double(next_address) as Address),
        0xC4 => CallCondIi(Zf, bus.read_double(next_address) as Address),
        0xC5 => Push(BC),
        0xC6 => AddAI(bus.read(next_address) as Immediate),
        0xC7 => Rst(bus.read(next_address) as Immediate),
        0xC8 => RetCond(Zf),
        0xC9 => Ret,
        0xCA => JpCondIi(Zf, bus.read_double(next_address) as Address),
        0xCB => decode_cb(next_address, bus),
        0xCC => CallCondIi(Zf, bus.read_double(next_address) as Address),
        0xCD => CallIi(bus.read_double(next_address) as Address),
        0xCE => AdcAI(bus.read(next_address) as Immediate),
        0xCF => Rst(bus.read(next_address) as Immediate),

        0xD0 => RetCond(Cf),
        0xD1 => Pop(DE),
        0xD2 => JpCondIi(Zf, bus.read_double(next_address) as Address),
        v @ 0xD3 => Undefined(v),
        0xD4 => CallCondIi(Zf, bus.read_double(next_address) as Address),
        0xD5 => Push(DE),
        0xD6 => SubAI(bus.read(next_address) as Immediate),
        0xD7 => Rst(bus.read(next_address) as Immediate),
        0xD8 => RetCond(Cf),
        0xD9 => Reti,
        0xDA => JpCondIi(Cf, bus.read_double(next_address) as Address),
        v @ 0xDB => Undefined(v),
        0xDC => CallCondIi(Cf, bus.read_double(next_address) as Address),
        v @ 0xDD => Undefined(v),
        0xDE => SbcAI(bus.read(next_address) as Immediate),
        0xDF => Rst(bus.read(next_address) as Immediate),

        0xE0 => LdIoA(bus.read(next_address) as Immediate),
        0xE1 => Pop(HL),
        0xE2 => LdIocA,
        v @ 0xE3 => Undefined(v),
        v @ 0xE4 => Undefined(v),
        0xE5 => Push(HL),
        0xE6 => AndAI(bus.read(next_address) as Immediate),
        0xE7 => Rst(bus.read(next_address) as Immediate),
        0xE8 => AddSpS(bus.read(next_address) as SignedImmediate),
        0xE9 => JpHl,
        0xEA => unimplemented!(), // TODO: (will) implement
        v @ 0xEB => Undefined(v),
        v @ 0xEC => Undefined(v),
        v @ 0xED => Undefined(v),
        0xEE => XorAI(bus.read(next_address) as Immediate),
        0xEF => Rst(bus.read(next_address) as Immediate),

        0xF0 => LdAIo(bus.read(next_address) as Immediate),
        0xF1 => Pop(AF),
        0xF2 => LdAIoc,
        0xF3 => Di,
        v @ 0xF4 => Undefined(v),
        0xF5 => Push(AF),
        0xF6 => OrAI(bus.read(next_address) as Immediate),
        0xF7 => Rst(bus.read(next_address) as Immediate),
        0xF8 => LdHlSp(bus.read(next_address) as SignedImmediate),
        0xF9 => LdSpHl,
        0xFA => unimplemented!(), // TODO: implement me
        0xFB => Ei,
        v @ 0xFC => Undefined(v),
        v @ 0xFD => Undefined(v),
        0xFE => CpAI(bus.read(next_address) as Immediate),
        0xFF => Rst(bus.read(next_address) as Immediate),
        _ => unreachable!(),
    }
}
